plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'org.cadixdev.licenser' version '0.6.1' apply false
    id 'io.freefair.lombok' version '8.4' apply false
}

subprojects {
    group('gg.saki')
    version('1.0.1-SNAPSHOT') // < change this version

    apply(plugin: 'java-library')
    apply(plugin: 'org.cadixdev.licenser')
    apply(plugin: 'io.freefair.lombok')

    // apply publish and signing plugins to all subprojects except example
    if (!project.name.equals('example')) {
        apply(plugin: 'maven-publish')
        apply(plugin: 'signing')

        java {
            withSourcesJar()
            withJavadocJar()
        }

        boolean isReleaseVersion = !this.version.toString().endsWith("SNAPSHOT")

        publishing {
            repositories {
                maven {
                    name = 'saki'
                    url = isReleaseVersion ? 'https://repo.saki.gg/releases' : 'https://repo.saki.gg/snapshots'
                    credentials(PasswordCredentials)
                    authentication {
                        basic(BasicAuthentication)
                    }
                }
            }

            publications {
                main(MavenPublication) {
                    from components.java

                    pom {
                        name = this.project.name
                        description = this.project.description
                        url = 'https://github.com/SakiPowered/zaiko'

                        licenses {
                            license {
                                name = 'MIT License'
                                url = 'https://opensource.org/licenses/MIT'
                            }
                        }

                        scm {
                            connection = 'scm:git:git://github.com/SakiPowered/zaiko.git'
                            developerConnection = 'scm:git:ssh://github.com/SakiPowered/zaiko.git'
                            url = 'https://github.com/SakiPowered/zaiko'
                        }
                    }
                }
            }
        }

        signing {
            required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }

            String signingKeyId = findProperty("signingKeyId")
            String signingKey = findProperty("signingKey")
            String signingPassword = findProperty("signingPassword")
            useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)

            sign publishing.publications.main
        }
    }


    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'

        finalizedBy(tasks.licenseFormat)
    }


    license {
        header = project.rootProject.file('LICENSE')

        include '**/*.java'
        charset = 'UTF-8'
        lineEnding = '\n'

        style {
            java = 'BLOCK_COMMENT'
        }

    }

    repositories {
        mavenCentral()
        maven { url = 'https://oss.sonatype.org/content/repositories/central' }
        maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    }

    dependencies {
        compileOnly('org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT')
    }

    lombok {
        version = '1.18.22'
    }
}